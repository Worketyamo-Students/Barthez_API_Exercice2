// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model employee {
  employe_id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  email String @unique
  password String
  post String
  salary String

  // each user can have one or many notifications
  notifications notification[]

  //each user can have one or many attendances
  attendances attendance[]
  
  //each user can have one or many abscences
  abscences absence[]
}

model attendance {
  attendance_id String @id @default(auto()) @map("_id") @db.ObjectId
  
  // Relationship between the employee and his attendance 
  employee employee @relation(fields: [employeeID], references: [employe_id])
  employeeID String @db.ObjectId
  
  date DateTime @default(now())
  startTime DateTime
  endTime DateTime
}

model absence {
  absence_id String @id @default(auto()) @map("_id") @db.ObjectId

  // Relationship between the employee and his attendance 
  employee employee @relation(fields: [employeeID], references: [employe_id])
  employeeID String @db.ObjectId

  date DateTime @default(now())
  absenceHours Int @default(1)
}

model notification {
  notification_id String @id @default(auto()) @map("_id") @db.ObjectId

  //relationship between the notification an user who receives it 
  employee employee @relation(fields: [employeeID], references: [employe_id])
  employeeID String @db.ObjectId

  message String
}